---
# Title: role-nextcloud-server
#
# Author: Bitfinity-NL / L. Rutten
# File: tasks/20.04/main.yml
#
# Description:
#   Role for deploy a Nextcloud server.

- name: "Install APT packages"
  apt:
    pkg:
    - apache2
    - libapache2-mod-php
    - php-cli 
    - php-fpm 
    - php-gmp
    - php-json 
    - php-intl 
    - php-imagick 
    - php-pdo 
    - php-mysql 
    - php-zip 
    - php-gd 
    - php-mbstring 
    - php-curl 
    - php-xml 
    - php-pear 
    - php-bcmath
    - wget
    - unzip

- name: "Check if /opt/nextcloud exists"
  stat:
    path: /opt/nextcloud
  register: result

- name: "Display if path /opt/nextcloud  exist"
  debug:
    msg: "{{ result.stat.exists }}"

- name: "Create initial database"
  mysql_db:
    name: "{{ nc_mariadb_dbname }}"
    encoding: utf8
    collation: utf8_bin
    state: present
    login_user: "{{ nc_mariadb_root }}"
    login_password: "{{ nc_mariadb_root_pwd }}"
  notify:

- name: "Create initial database user"
  mysql_user:
    name: "{{ nc_mariadb_user }}"
    password: "{{ nc_mariadb_pass }}"
    priv: "{{ nc_mariadb_dbname }}.*:ALL,GRANT"
    state: present
    login_user: "{{ nc_mariadb_root }}"
    login_password: "{{ nc_mariadb_root_pwd }}"
  no_log: True
  
- name: "Remove directory /var/www/html"
  file:
    path: /var/www/html
    state: absent
  when: result.stat.exists == false
  
- name: "Unarchive zip to /opt/nextcloud" 
  unarchive:
    src: "{{ nc_src_url }}" 
    dest: /opt/
    owner: www-data
    group: www-data
    mode: '0755'
    remote_src: yes
  when: result.stat.exists == false

- name: "Create Nextcloud data directory"
  file:
    path: "{{ nc_nextcloud_data_dir }}"
    owner: www-data
    group: www-data
    mode: '0755'
    state: directory

- name: "Create symlink from /opt/nextcloud to /var/www/html"
  file:
    src: /opt/nextcloud
    dest: /var/www/html
    owner: root
    group: root
    mode: '0755'
    state: link

- name: "Configure Apache2 000-default.conf for nextcloud"
  blockinfile:
    backup: yes
    path: "{{ item }}"
    marker: "        #-- {mark} Nextcloud - ANSIBLE MANAGED BLOCK --"
    insertbefore: "</VirtualHost>"
    block: |2
              <Directory /opt/nextcloud/>
                  AllowOverride All
                  Options FollowSymLinks MultiViews

                  <IfModule mod_dav.c>
                    Dav off
                  </IfModule>
                 
                  SetEnv HOME /var/www/html
                  SetEnv HTTP_HOME /var/www/html

              </Directory>
  with_items:
    - /etc/apache2/sites-available/000-default.conf
    - /etc/apache2/sites-available/000-default-le-ssl.conf

- name: "Configure Apache2 - Enable HTTP Strict Transport Security"
  blockinfile:
    backup: yes
    path: "{{ item }}"
    marker: "        #-- {mark} Nextcloud - Enable HTTP Strict Transport Security - ANSIBLE MANAGED BLOCK --"
    insertbefore: "</VirtualHost>"
    block: |2
               <IfModule mod_headers.c>
                 Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains"
              </IfModule>
  with_items:
    - /etc/apache2/sites-available/000-default-le-ssl.conf

- name: "Configure Apache2 for using .htaccess"
  replace:
    path: "/tmp/apache2.conf"
    regexp: '<Directory \/var\/www\/>\n(.*)\n(.*AllowOverride None)'
    replace: '<Directory /var/www/>\n        Options Indexes FollowSymL>
    backup: yes

- name: "Enable Apache2 modules"
  apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - rewrite
    - dir
    - mime
    - env
    - headers
  notify:
    - restart_apache2

- name: "Configure Nextcloud from commandline"
  shell:
    cmd: >
      sudo -u www-data php occ  maintenance:install --database "mysql" --database-name "{{ nc_mariadb_dbname }}" 
      --database-user "{{ nc_mariadb_user }}" --database-pass "{{ nc_mariadb_pass }}" 
      --admin-user "{{ nc_nextcloud_admin }}" --admin-pass "{{ nc_nextcloud_pass }}"
      --data-dir "{{ nc_nextcloud_data_dir }}"
    chdir: /opt/nextcloud/
  when: result.stat.exists == false

- name: "Configure Nextcloud trusted domains"
  lineinfile:
    path: /opt/nextcloud/config/config.php
    regexp: 0 => 'localhost',
    insertafter: 0 => 'localhost',
    line: 1 => '{{ nc_nextcloud_domain }}',
  when: result.stat.exists == false

- name: "PHP 7.4 tuning"
  replace:
    path: /etc/php/7.4/apache2/php.ini
    regexp: "{{ item.find }}"
    replace: "{{ item.replace }}"
  with_items:
    - { find: 'memory_limit = 128M', replace: 'memory_limit = 1024M' }
    - { find: 'output_buffering = 4096', replace: ';output_buffering = 4096' }
    - { find: 'upload_max_filesize = 2M', replace: 'upload_max_filesize = 4096M' }
    - { find: 'post_max_size = 8M', replace: 'post_max_size = 5006M' }
  notify:
    - restart_apache2
